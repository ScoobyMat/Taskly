services:
  db:
    image: postgres:17
    container_name: taskly_db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
      # - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./Backend
    container_name: taskly_backend
    restart: unless-stopped
    ports:
      - "5001:8080"
    environment:
      ConnectionStrings__DefaultConnection: "Host=db;Port=${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}"
      JWT__TokenKey: ${JWT__TokenKey}
    depends_on:
      - db

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: taskly_frontend
    restart: unless-stopped
    ports:
      - "4200:8080"
    depends_on:
       backend:
         condition: service_started
    volumes:
      - ./frontend/client/nginx.compose.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  db-data:
